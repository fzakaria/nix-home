# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  inputs,
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}: {
  imports = [
    inputs.nixos-hardware.nixosModules.framework-13-7040-amd
  ];

  boot = {
    initrd = {
      availableKernelModules = ["nvme" "xhci_pci" "thunderbolt" "usb_storage" "sd_mod"];
      kernelModules = [];
    };
    kernelModules = ["kvm-amd"];
    kernelPackages = pkgs.linuxPackages_latest;
    extraModulePackages = [];
    kernelParams = [
      # Turn on adaptive brightness management
      # https://community.frame.work/t/adaptive-backlight-management-abm/41055/31
      #  "amdgpu.abmlevel=0"
    ];
  };

  hardware = {
    # Plenty of the opengl settings are set in nixos-hardware
    # for common/amd/gpu
    opengl.enable = true;
    enableRedistributableFirmware = true;
    cpu.amd.updateMicrocode = true;
  };

  boot.initrd.luks.devices."luks-893a3ca8-c752-4aac-bc15-0e7cc315c236".device = "/dev/disk/by-uuid/893a3ca8-c752-4aac-bc15-0e7cc315c236";

  filesystems."/" = {
    device = "none";
    fsType = "tmpfs";
    options = [ "defaults" "size=25%" "mode=755" ];
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/FE00-BD0D";
    fsType = "vfat";
    options = ["fmask=0022" "dmask=0022"];
  };

  fileSystems."/persistent" = {
    device = "/dev/disk/by-uuid/8cdbf627-cdfc-4137-b3fe-0c038ecf9045";
    fsType = "ext4";
  };

  swapDevices = [
    {device = "/dev/disk/by-uuid/b985248a-055c-4ccb-ae0a-d995e06e7297";}
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp1s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
}
